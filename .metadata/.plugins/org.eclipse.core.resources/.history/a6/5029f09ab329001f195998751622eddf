package com.comandadigital.services;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.List;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.comandadigital.models.PedidoModel;
import com.comandadigital.repositories.PedidoRepository;

@Service
public class RelatorioService {

	@Autowired
    private PedidoRepository pedidoRepository;
	
	public ByteArrayInputStream gerarRelatorioSemanal() {
		LocalDateTime now = LocalDateTime.now();
		LocalDateTime umaSemanaAtras = now.minus(1, ChronoUnit.WEEKS);
		
		List<PedidoModel> pedidos = pedidoRepository.findPedidosEntreDatas(umaSemanaAtras, now);

        try (workbook workbook = new XSSFWorkbook(); ByteArrayOutputStream out = new ByteArrayOutputStream()) {
            Sheet sheet = workbook.createSheet("Relatório Semanal");

            // Cabeçalhos
            Row headerRow = sheet.createRow(0);
            headerRow.createCell(0).setCellValue("Item");
            headerRow.createCell(1).setCellValue("Quantidade Pedida");
            headerRow.createCell(2).setCellValue("Média Tempo Entrega");
            headerRow.createCell(3).setCellValue("Valor Total");

            // Dados
            int rowIdx = 1;
            for (PedidoModel pedido : pedidos) {
                Row row = sheet.createRow(rowIdx++);

                row.createCell(0).setCellValue(pedido.getItem().getNome());
                row.createCell(1).setCellValue(pedido.getQuantidade());
                row.createCell(2).setCellValue(calcularMediaTempoEntrega(pedido));
                row.createCell(3).setCellValue(pedido.getValor() * pedido.getQuantidade());
            }

            workbook.write(out);
            return new ByteArrayInputStream(out.toByteArray());
        }
	}
	
	 private double calcularMediaTempoEntrega(PedidoModel pedido) {
	        if (pedido.getHorarioEntrega() != null && pedido.getHorarioPedido() != null) {
	            return ChronoUnit.MINUTES.between(pedido.getHorarioPedido(), pedido.getHorarioEntrega());
	        }
	        return 0;
	    }
}
