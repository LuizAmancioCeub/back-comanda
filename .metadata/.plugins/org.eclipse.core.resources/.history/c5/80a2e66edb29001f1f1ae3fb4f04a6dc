package com.comandadigital.services;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.comandadigital.models.ItemRelatorio;
import com.comandadigital.models.PedidoModel;
import com.comandadigital.repositories.PedidoRepository;

import jakarta.servlet.ServletOutputStream;
import jakarta.servlet.http.HttpServletResponse;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class RelatorioService {

	@Autowired
    private PedidoRepository pedidoRepository;
	
	 public void gerarRelatorioSemanal2(HttpServletResponse response) throws IOException {
		 log.info("....Gerando Arquivo.....");
	        LocalDateTime now = LocalDateTime.now();
	        LocalDateTime startDate = now.minusDays(7);

	        List<PedidoModel> pedidos = pedidoRepository.findPedidosEntreDatas(startDate, now);
	        
	        HSSFWorkbook workbook = new HSSFWorkbook();
	        
	        HSSFSheet sheet = workbook.createSheet("Relatório Semanal");
	        HSSFRow row = sheet.createRow(0);
	        
	        // Adicionar cabeçalhos
	            row.createCell(0).setCellValue("Item");
	            row.createCell(1).setCellValue("Quantidade de Pedidos");
	            row.createCell(2).setCellValue("Tempo Médio de Entrega (minutos)");
	            row.createCell(3).setCellValue("Valor Total Arrecadado");

	            // Adicionar dados
	            int rowNum = 1;
	            for (PedidoModel pedido : pedidos) {
	                HSSFRow dataRow = sheet.createRow(rowNum);
	                dataRow.createCell(0).setCellValue(pedido.getItem().getNome());
	                dataRow.createCell(1).setCellValue(pedido.getQuantidade());
	                dataRow.createCell(2).setCellValue(pedido.getHorarioEntrega() != null ? pedido.getHorarioEntrega().getMinute() - pedido.getHorarioPedido().getMinute() : 0);
	                dataRow.createCell(3).setCellValue(pedido.getValor() * pedido.getQuantidade());
	                rowNum++;
	            }
	            ServletOutputStream ops = response.getOutputStream();
	            workbook.write(ops);
	            workbook.close();
	            ops.close();
	    }
}
